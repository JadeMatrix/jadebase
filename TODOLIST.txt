Events:
 - pausing event loop using XNextEvent()
    - ClientMessage XEvent with Atom "jade::eventLoopWakeup"
 - startEventSystem() and stopEventSystem()
    - startEventSystem() starts event loop
    - stopEventSystem() sends the ClientMessage
 - jade::windows should get closed callbacks through their windowviews

Quit chain:
 - quit requested
 - quit request callback called
    - may call jade::cancelQuit() to cancel a quit
 - if not cancelled, stopEventSystem()
    - calls closeInputDevices()
 - quit cleanup callback
    - this allows windows to be closed in an arbitrary manner before quitting
    - no interruption from events so as to prevent cleanup process breaking, like in Chrome
 - closeAllWindows()
    - may all already be closed
 - deInitNamedResources()
 - stopTaskSystem()
    - closes task queue
    - sets stop flag for workers
    - does NOT wait for workers
 - deInitTaskSystem()
    - called in main thread
    - waits for non-main workers
    - cleans up memory

--------------------------------------------------------------------------------

Remove minimum window dimensions and programmatically derive them from the
windowview's contained element constraints

--------------------------------------------------------------------------------

Ensure only 1 window::manip at a time, so we can:
  - Isolate window updating within window::manip
  - Have window::manip handle manual (code) window adjustments
  - Have event parser handle passive (WM) window adjustments
... then we can finish fully implementing window actions cleanly

--------------------------------------------------------------------------------

Create event-handler thread ie
    while( !quitFlag() && waitNextEvent( &event ) )
    {
        ...
    }
This is easy enough to support using X, and is pretty much necessary for Cocoa

--------------------------------------------------------------------------------

If the pointer hasn't moved since jadebase initialization, nothing can be
clicked.  Super minor but may have unforseen consequences down the line.

--------------------------------------------------------------------------------

Start using 'enum class' and tags at enum uses
  - Start using enum class in your code, if possible
    http://cpphints.com/hints/14
  - Adding a new constant to enum don't forget to correct switch operators
    http://cpphints.com/hints/36

--------------------------------------------------------------------------------

Deprecate gui_element::getVisual***() in favor of more functionally explicit
methods

--------------------------------------------------------------------------------

Start using the new jade::getSetting() where appropriate

--------------------------------------------------------------------------------

Consolidate the terms in jade::scrollset

--------------------------------------------------------------------------------

